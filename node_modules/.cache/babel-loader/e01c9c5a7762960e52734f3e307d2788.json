{"ast":null,"code":"var _jsxFileName = \"/Users/orest/Documents/GitHub/bosch-app/my-app/src/components/Content/Content.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Text from \"./Text/Text\";\nimport Title from \"./Title/Title\";\nimport ViewMore from \"./ViewMore/ViewMore\";\nimport { StyledContent, StyledTitles } from './Content.styled';\nimport { getAll, getAllSensorsData } from \"../../utils/Api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Content() {\n  _s();\n\n  let emptyArray = [];\n  const [items, setItems] = useState(emptyArray);\n  useEffect(() => {\n    if (items.length == 0) {\n      getAll().then(res => {\n        if (res !== undefined) {\n          setItems(res.data);\n        }\n      });\n    }\n  });\n  const [localData, SetData] = useState([]);\n  useEffect(() => {\n    if (localData.length == 0) {\n      getAll().then(res => {\n        if (res !== undefined) {\n          SetData(res);\n        }\n      });\n    }\n  });\n  let emptyArray2 = [];\n  const [sensors_data, setSensors] = useState(emptyArray2);\n  useEffect(() => {\n    if (sensors_data.length == 0) {\n      getAllSensorsData().then(res => {\n        if (res !== undefined) {\n          setSensors(res.data);\n        }\n      });\n    }\n  });\n  const [localData2, SetData2] = useState([]);\n  useEffect(() => {\n    if (localData2.length == 0) {\n      getAllSensorsData().then(res => {\n        if (res !== undefined) {\n          SetData2(res);\n        }\n      });\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(StyledContent, {\n    children: [/*#__PURE__*/_jsxDEV(Text, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(StyledTitles, {\n      children: items.map(title => /*#__PURE__*/_jsxDEV(Title, {\n        name: title.name,\n        guarantee: title.guarantee,\n        date_of_sale: title.date_of_sale,\n        sales_location: title.sales_location\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(StyledTitles, {\n      children: sensors_data.map(sensor => /*#__PURE__*/_jsxDEV(Title, {\n        sensor_name: sensor.sensor_name,\n        sensor_type: sensor.sensor_type,\n        time_stamp: sensor.time_stamp,\n        sensor_data: sensor.sensor_data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ViewMore, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Content, \"kXNSxEpbMm7AuRlpi8dhFWGqj0o=\");\n\n_c = Content;\nexport default Content;\n\nvar _c;\n\n$RefreshReg$(_c, \"Content\");","map":{"version":3,"sources":["/Users/orest/Documents/GitHub/bosch-app/my-app/src/components/Content/Content.js"],"names":["React","useState","useEffect","Text","Title","ViewMore","StyledContent","StyledTitles","getAll","getAllSensorsData","Content","emptyArray","items","setItems","length","then","res","undefined","data","localData","SetData","emptyArray2","sensors_data","setSensors","localData2","SetData2","map","title","name","guarantee","date_of_sale","sales_location","sensor","sensor_name","sensor_type","time_stamp","sensor_data"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport Text from \"./Text/Text\";\nimport Title from \"./Title/Title\";\nimport ViewMore from \"./ViewMore/ViewMore\";\nimport { StyledContent, StyledTitles } from './Content.styled'\nimport { getAll, getAllSensorsData } from \"../../utils/Api\";\n\n\nfunction Content() {\n    let emptyArray = [];\n    const [items, setItems] = useState(emptyArray);\n    useEffect(() => {\n      if (items.length == 0) {\n        getAll().then((res) => {\n          if (res !== undefined) {\n            setItems(res.data);\n          }\n        });\n      }\n    });\n  \n    const [localData, SetData] = useState([]);\n    useEffect(() => {\n      if (localData.length == 0) {\n        getAll().then((res) => {\n          if (res !== undefined) {\n            SetData(res);\n          }\n        });\n      }\n    });\n\n\n\n    let emptyArray2 = [];\n    const [sensors_data, setSensors] = useState(emptyArray2);\n    useEffect(() => {\n      if (sensors_data.length == 0) {\n        getAllSensorsData().then((res) => {\n          if (res !== undefined) {\n            setSensors(res.data);\n          }\n        });\n      }\n    });\n\n    const [localData2, SetData2] = useState([]);\n    useEffect(() => {\n      if (localData2.length == 0) {\n        getAllSensorsData().then((res) => {\n          if (res !== undefined) {\n            SetData2(res);\n          }\n        });\n      }\n    });\n    return(\n        <StyledContent>\n            <Text />\n            <StyledTitles>\n                {items.map(title => (\n                    <Title name={title.name} guarantee={title.guarantee} date_of_sale ={title.date_of_sale} sales_location ={title.sales_location}/>\n                ))}\n            </StyledTitles>\n            <StyledTitles>\n                {sensors_data.map(sensor => (\n                    <Title sensor_name={sensor.sensor_name} sensor_type={sensor.sensor_type} time_stamp ={sensor.time_stamp} sensor_data ={sensor.sensor_data}/>\n                ))}\n            </StyledTitles>\n            <ViewMore />\n        </ StyledContent>\n    );\n}\n\nexport default Content;"]},"metadata":{},"sourceType":"module"}